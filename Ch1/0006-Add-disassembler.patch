diff --git a/llvm/lib/Target/Toy/CMakeLists.txt b/llvm/lib/Target/Toy/CMakeLists.txt
index 8b8be1608697..5fc8bf233053 100644
--- a/llvm/lib/Target/Toy/CMakeLists.txt
+++ b/llvm/lib/Target/Toy/CMakeLists.txt
@@ -20,5 +20,6 @@ add_llvm_target(ToyCodeGen
   )
 
 add_subdirectory(AsmParser)
+add_subdirectory(Disassembler)
 add_subdirectory(TargetInfo)
 add_subdirectory(MCTargetDesc)
diff --git a/llvm/lib/Target/Toy/Toy.td b/llvm/lib/Target/Toy/Toy.td
index 4213a6c13c29..4a02ab43225b 100644
--- a/llvm/lib/Target/Toy/Toy.td
+++ b/llvm/lib/Target/Toy/Toy.td
@@ -36,6 +36,7 @@ def ToyAsmParser : AsmParser;
 
 def Toy : Target {
   let InstructionSet = ToyInstrInfo;
+  let AssemblyParsers  = [ToyAsmParser];
 }
 
 def : ProcessorModel<"cpu-rv32", NoSchedModel, []>;
diff --git a/llvm/lib/Target/Toy/ToyInstrFormats.td b/llvm/lib/Target/Toy/ToyInstrFormats.td
index 12497a1a4160..538acad47a9b 100644
--- a/llvm/lib/Target/Toy/ToyInstrFormats.td
+++ b/llvm/lib/Target/Toy/ToyInstrFormats.td
@@ -25,6 +25,7 @@
 class ToyInst<dag outs, dag ins, string asm, list<dag> pattern>: Instruction
 {
   let Namespace = "Toy";
+  let Size = 4; // this will autogen the DecoderTableToy32
 
   let OutOperandList = outs;
   let InOperandList = ins;
@@ -34,6 +35,7 @@ class ToyInst<dag outs, dag ins, string asm, list<dag> pattern>: Instruction
   let DecoderNamespace = "Toy";
 
   field bits<32> Inst;
+  bits<32> SoftFail = 0;
   bits<7> Opcode = 0;
   let Inst{6-0} = Opcode;
 }
