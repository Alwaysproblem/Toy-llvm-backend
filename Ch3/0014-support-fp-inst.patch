diff --git a/llvm/lib/Target/Toy/ToyInstrInfo.td b/llvm/lib/Target/Toy/ToyInstrInfo.td
index bebd3bcba6cd..e4506d9e5522 100644
--- a/llvm/lib/Target/Toy/ToyInstrInfo.td
+++ b/llvm/lib/Target/Toy/ToyInstrInfo.td
@@ -153,3 +153,23 @@ def : Pat<(brcond (i32 (setge GPR:$lhs, GPR:$rhs)), bb:$dst), (BGE GPR:$lhs, GPR
 def : Pat<(brcond (i32 (setle GPR:$lhs, GPR:$rhs)), bb:$dst), (BGE GPR:$rhs, GPR:$lhs, brtarget:$dst)>;
 
 def : Pat<(AddrFI GPR:$rs1, imm12:$imm), (ADDI GPR:$rs1, imm12:$imm)>;
+
+class ArithLogicF <bits<7> funct7, bits<3> funct3, string inst, SDNode node>:
+      InstR<0b1010011, funct7 , funct3, (outs FPR:$rd), (ins FPR:$rs1, FPR:$rs2),
+      !strconcat(inst, "\t$rd, $rs1, $rs2"),
+      [(set FPR:$rd, (node FPR:$rs1, FPR:$rs2))]>;
+
+def FADDS : ArithLogicF<0b0000000, 0b000, "fadd.s", fadd>;
+def FSUBS : ArithLogicF<0b0000100, 0b000, "fsub.s", fsub>;
+def FMULS : ArithLogicF<0b0001000, 0b000, "fmul.s", fmul>;
+def FDIVS : ArithLogicF<0b0001100, 0b000, "fdiv.s", fdiv>;
+
+class ArithLogicF64 <bits<7> funct7, bits<3> funct3, string inst, SDNode node>:
+      InstR<0b1010011, funct7, funct3, (outs FPR64:$rd), (ins FPR64:$rs1, FPR64:$rs2),
+      !strconcat(inst, "\t$rd, $rs1, $rs2"),
+      [(set FPR64:$rd, (node FPR64:$rs1, FPR64:$rs2))]>;
+
+def FADDD : ArithLogicF64<0b0000001, 0b000, "fadd.d", fadd>;
+def FSUBD : ArithLogicF64<0b0000101, 0b000, "fsub.d", fsub>;
+def FMULD : ArithLogicF64<0b0001001, 0b000, "fmul.d", fmul>;
+def FDIVD : ArithLogicF64<0b0001101, 0b000, "fdiv.d", fdiv>;
